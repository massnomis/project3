{"ast":null,"code":"import _regeneratorRuntime from \"/Users/whitneyturner/project3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/whitneyturner/project3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/whitneyturner/project3/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useWeb3React } from \"@web3-react/core\";\nimport Dapp from '../src/Dapp.js';\nimport * as serviceWorker from './serviceWorker';\nimport { injected } from \"../components/wallet/connector\";\nexport default function Home() {\n  var _useWeb3React = useWeb3React(),\n      active = _useWeb3React.active,\n      account = _useWeb3React.account,\n      library = _useWeb3React.library,\n      connector = _useWeb3React.connector,\n      activate = _useWeb3React.activate,\n      deactivate = _useWeb3React.deactivate;\n\n  function connect() {\n    return _connect.apply(this, arguments);\n  }\n\n  function _connect() {\n    _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return activate(injected);\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n    return _connect.apply(this, arguments);\n  }\n\n  function disconnect() {\n    return _disconnect.apply(this, arguments);\n  }\n\n  function _disconnect() {\n    _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              try {\n                deactivate();\n              } catch (ex) {\n                console.log(ex);\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _disconnect.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col items-center justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: connect,\n    className: \"py-2 mt-20 mb-4 text-lg font-bold text-white rounded-lg w-56 bg-blue-600 hover:bg-blue-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Connect to MetaMask\"), active ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Connected with \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 38\n    }\n  }, account)) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 64\n    }\n  }, \"Not connected\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: disconnect,\n    className: \"py-2 mt-20 mb-4 text-lg font-bold text-white rounded-lg w-56 bg-blue-600 hover:bg-blue-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Disconnect\"));\n}\nReactDOM.render( /*#__PURE__*/React.createElement(Dapp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 17\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/whitneyturner/project3/src/index.js"],"names":["React","ReactDOM","useWeb3React","Dapp","serviceWorker","injected","Home","active","account","library","connector","activate","deactivate","connect","console","log","disconnect","ex","render","document","getElementById","unregister"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,eAAe,SAASC,IAAT,GAAgB;AAAA,sBAC2CJ,YAAY,EADvD;AAAA,MACnBK,MADmB,iBACnBA,MADmB;AAAA,MACXC,OADW,iBACXA,OADW;AAAA,MACFC,OADE,iBACFA,OADE;AAAA,MACOC,SADP,iBACOA,SADP;AAAA,MACkBC,QADlB,iBACkBA,QADlB;AAAA,MAC4BC,UAD5B,iBAC4BA,UAD5B;;AAAA,WAEdC,OAFc;AAAA;AAAA;;AAAA;AAAA,wEAE7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEUF,QAAQ,CAACN,QAAD,CAFlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIIS,cAAAA,OAAO,CAACC,GAAR;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAF6B;AAAA;AAAA;;AAAA,WASdC,UATc;AAAA;AAAA;;AAAA;AAAA,2EAS7B;AAAA;AAAA;AAAA;AAAA;AACE,kBAAI;AACFJ,gBAAAA,UAAU;AACX,eAFD,CAEE,OAAOK,EAAP,EAAW;AACXH,gBAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ;AACD;;AALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAT6B;AAAA;AAAA;;AAgB7B,sBACE;AAAK,IAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEJ,OAAjB;AAA0B,IAAA,SAAS,EAAC,4FAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEGN,MAAM,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,OAAJ,CAArB,CAAH,gBAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAF3D,eAGE;AAAQ,IAAA,OAAO,EAAEQ,UAAjB;AAA6B,IAAA,SAAS,EAAC,4FAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF;AAOD;AACDf,QAAQ,CAACiB,MAAT,eAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B,E,CACA;AACA;AACA;;AACAhB,aAAa,CAACiB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useWeb3React } from \"@web3-react/core\";\nimport Dapp from '../src/Dapp.js';\nimport * as serviceWorker from './serviceWorker';\nimport { injected } from \"../components/wallet/connector\";\nexport default function Home() {\n    const { active, account, library, connector, activate, deactivate } = useWeb3React()\n  async function connect() {\n    try {\n      await activate(injected)\n    } catch (ex) {\n      console.log(ex)\n    }\n}\n  async function disconnect() {\n    try {\n      deactivate()\n    } catch (ex) {\n      console.log(ex)\n    }\n  }\n  return (\n    <div className=\"flex flex-col items-center justify-center\">\n      <button onClick={connect} className=\"py-2 mt-20 mb-4 text-lg font-bold text-white rounded-lg w-56 bg-blue-600 hover:bg-blue-800\">Connect to MetaMask</button>\n      {active ? <span>Connected with <b>{account}</b></span> : <span>Not connected</span>}\n      <button onClick={disconnect} className=\"py-2 mt-20 mb-4 text-lg font-bold text-white rounded-lg w-56 bg-blue-600 hover:bg-blue-800\">Disconnect</button>\n    </div>\n  )\n}\nReactDOM.render(<Dapp />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}